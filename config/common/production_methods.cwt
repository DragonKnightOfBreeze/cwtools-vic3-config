types = {
    type[production_method] = {
        path = "game/common/production_methods"
        file_extension = .txt
        localisation = {
            name = "$"
        }
    }
}

production_method = {
    ## cardinality = 0..1
    ### PM Icon
    texture = filepath
    
    ## cardinality = 0..1
    ### is this the default pm for its group? if no pm in a group is designated as the default, the first pm is considered the default.
    is_default = bool

    profession_ratio = {
        <pop_type> = int
    }

    ## cardinality = 0..1
    profession_ratio = {
        <pop_type> = int
    }

    ## cardinality = 0..1
    ### is this pm hidden to countries that can not enable them
    is_hidden_when_unavailable = bool

    ## cardinality = 0..1
    ### Replaces this production method when the referenced production method is valid
    replacement_if_valid = <production_method>

    ## cardinality = 0..1
    ### Power Bloc principles that unlock this production method
    unlocking_principles = {
        <power_bloc_principle>
    }

    ## cardinality = 0..1
    ### Power Bloc identity that unlock this production method
    unlocking_identity = <power_bloc_identity>

    ## cardinality = 0..1
    ### Religions that unlock this production method
    unlocking_religions = {
        <religion>
    }

    ## cardinality = 0..1
    ### Religions that forbid this production method
    disallowing_religions = {
        <religion>
    }

    ## cardinality = 0..1
    ### Needs to match city_graphics_data.settings color array
    city_lights_color_index = int

    ## cardinality = 0..1
    ### Apply this production method when there is too few pops in a state
    low_pop_method = bool

    ## cardinality = 0..1
    ### these modifiers are applied to the country if this pm is active
    country_modifiers = single_alias_right[pm_modifiers]

    ## cardinality = 0..1
    ### these modifiers are applied to the state if this pm is active
    state_modifiers = single_alias_right[pm_modifiers]

    ## cardinality = 0..1
    ### these modifiers are applied to the building if this pm is active
    building_modifiers = single_alias_right[pm_modifiers]

    ## cardinality = 0..1
    ### these modifiers are applied to the building after pm is changed. Duration is BUILDING_TIMED_MODIFIER_WEEKS
    timed_modifiers = {
        ## cardinality = 0..inf
        <modifier_container>
    }

    ## cardinality = 0..1
    ### optional list of required laws to be able to activate this pm
    unlocking_laws = {
        ## cardinality = 0..inf
        <law>
    }

    ## cardinality = 0..1
    ### optional list of required laws that disallow this pm
    disallowing_laws = {
        ## cardinality = 0..inf
        <law>
    }

    ## cardinality = 0..1
    ### optional list of required technologies to be able to activate this pm
    unlocking_technologies = {
        ## cardinality = 0..inf
        <technology>
    }

    ## cardinality = 0..1
    ### optional list of required pm's to be able to activate this pm.\nThese must refer to pm keys on the same building
    unlocking_production_methods = {
        ## cardinality = 0..inf
        <production_method>
    }

    ## cardinality = 0..1
    ### optional list of technologies that need to be invented in the world to be able to activate this pm
    unlocking_global_technologies = {
        ## cardinality = 0..inf
        <technology>
    }

    ## cardinality = 0..1
    ### a pm may list one or more goods as a required input goods, those goods need to be accessible to the building to be able to activate the this pm
    required_input_goods = <good>

    ## cardinality = 0..1
    ### base AI weight, default 1.0
    ai_weight = value_field

}

single_alias[pm_modifiers] = {
    ## cardinality = 0..1
    workforce_scaled = single_alias_right[modifier_clause]

    ## cardinality = 0..1
    level_scaled = single_alias_right[modifier_clause]

    ## cardinality = 0..1
    throughput_scaled = single_alias_right[modifier_clause]

    ## cardinality = 0..1
    unscaled = single_alias_right[modifier_clause]
}