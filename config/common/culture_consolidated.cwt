types = {
    ## unique = yes
    type[culture] = {
        path = "game/common/cultures"
        file_extension = .txt
        localisation = {
            ## required
            name = "$"
        }
    }
    ## unique = yes
    type[culture_graphic] = {
        path = "game/common/culture_graphics"
    }
    ## unique = yes
    type[discrimination_trait] = {
        path = "game/common/discrimination_traits"
        file_extension = .txt
        subtype[heritage] = {
            type = heritage
        }
        subtype[language] = {
            type = language
        }
        subtype[tradition] = {
            type = tradition
        }
        localisation = {
            name = "$"
        }
    }
    ## unique = yes
    type[discrimination_trait_group] = {
        path = "game/common/discrimination_trait_groups"
        file_extension = .txt
        subtype[heritage] = {
            type = heritage
        }
        subtype[language] = {
            type = language
        }
        localisation = {
            name = "$"
        }
    }
}

enums = {
    enum[discrimination_trait_types] = {
        heritage
        language
        tradition
    }
    enum[discrimination_trait_group_types] = {
        heritage
        language
    }
}

culture = {
    ### Map color, use int with rgb or hsv360, float with hsv
    color = enum[named_colors]
    color = colour[rgb]
    color = colour[hsv]
    color = colour[hsv360]
    ## color_type = hsv
    color = {
        ## cardinality = 3..3
        base = float
    }
    ## color_type = rgb
    color = {
        ## cardinality = 3..3
        base = int[0..255]
    }
    ## color_type = hex
    color = scalar
    ### Default religion for culture
    religion = <religion>
    heritage = <discrimination_trait.heritage>
    language = <discrimination_trait.language>

    ## cardinality = 0..1
    traditions = {
        ## cardinality = 0..inf
        <discrimination_trait.tradition>
    }

    ### This culture can't get enough of...
    ## cardinality = 0..1
    obsessions = {
        ## cardinality = 1..inf
        <good.consumable>
    }

    ### Men's names
    male_common_first_names = {
        ## cardinality = 1..inf
        localisation
    }

    ### Women's names
    female_common_first_names = {
        ## cardinality = 1..inf
        localisation
    }

    ### Family names
    common_last_names = {
        ## cardinality = 1..inf
        localisation
    }

    ### Noble family first names
    ## cardinality = 0..1
    male_noble_first_names = {
        ## cardinality = 0..inf
        localisation
    }

    ### Noble family first names
    ## cardinality = 0..1
    female_noble_first_names = {
        ## cardinality = 0..inf
        localisation
    }

    ### Noble family names
    ## cardinality = 0..1
    noble_last_names = {
        ## cardinality = 0..inf
        localisation
    }

    ### Kings' names
    ## cardinality = 0..1
    male_regal_first_names = {
        ## cardinality = 0..inf
        localisation
    }

    ### Queens' names
    ## cardinality = 0..1
    female_regal_first_names = {
        ## cardinality = 0..inf
        localisation
    }

    ### Royal family names
    ## cardinality = 0..1
    regal_last_names = {
        ## cardinality = 0..inf
        localisation
    }

    ### What other stuff looks like
    graphics = <culture_graphic>

    ### What pops look like
    ethnicities = {
        ### Vanilla only uses a single line '1 = "ethnicity"'
        ## cardinality = 1..inf
        int = <ethnicity>
    }
}

culture_graphic = {

}

discrimination_trait = {
    type = enum[discrimination_trait_types]
    subtype[heritage] = {
        trait_group = <discrimination_trait_group.heritage>
    }
    subtype[language] = {
        trait_group = <discrimination_trait_group.language>
    }
}

discrimination_trait_group = {
    type = enum[discrimination_trait_group_types]
}
